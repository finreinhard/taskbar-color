{
  "compilerOptions": {
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "target": "es2020",
    /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "lib": [
      "es2020",
      "DOM",
      "DOM.Iterable"
    ],
    /* Enable experimental support for TC39 stage 2 draft decorators. */
    "experimentalDecorators": true,
    /* Modules */
    "module": "es2020",
    /* Specify module resolution strategy: 'node' (Node.js). */
    "moduleResolution": "node",
    /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declaration": true,
    /* Specify an output folder for all emitted files. */
    "outDir": "dist",
    /* Disable emitting comments. */
    "removeComments": true,
    /* Specify emit/checking behavior for imports that are only used for types. */
    "importsNotUsedAsValues": "remove",
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "esModuleInterop": true,
    /* Ensure that casing is correct in imports. */
    "forceConsistentCasingInFileNames": true,
    /* Enable all strict type-checking options. */
    "strict": true,
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitAny": true,
    /* When type checking, take into account 'null' and 'undefined'. */
    "strictNullChecks": true,
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictFunctionTypes": true,
    /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictBindCallApply": true,
    /* Enable error reporting when 'this' is given the type 'any'. */
    "noImplicitThis": true,
    /* Default catch clause variables as 'unknown' instead of 'any'. */
    "useUnknownInCatchVariables": true,
    /* Ensure 'use strict' is always emitted. */
    "alwaysStrict": true,
    /* Enable error reporting when local variables aren't read. */
    "noUnusedLocals": true,
    /* Raise an error when a function parameter isn't read. */
    "noUnusedParameters": true,
    /* Enable error reporting for fallthrough cases in switch statements. */
    "noFallthroughCasesInSwitch": true,
    /* Add 'undefined' to a type when accessed using an index. */
    "noUncheckedIndexedAccess": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noImplicitOverride": true,
    /* Skip type checking all .d.ts files. */
    "skipLibCheck": true,
  }
}
